{"version":3,"sources":["Thought.jsx","ThoughtForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Thought","props","thoughts","removeThought","handleRemoveClick","target","value","className","map","thought","index","aria-label","onClick","ThoughtForm","useState","text","setText","onSubmit","event","preventDefault","addThought","type","placeholder","onChange","App","setThoughts","prev","filter","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA8BeA,EA5BC,SAACC,GAAW,IAClBC,EAA4BD,EAA5BC,SAAUC,EAAkBF,EAAlBE,cAEZC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BF,EAAcE,EAAOC,QAGvB,OACE,oBAAIC,UAAU,WAAd,SACGL,EAASM,KAAI,SAACC,EAASC,GACtB,OACE,qBAAgBH,UAAU,UAA1B,UACE,wBACED,MAAOG,EACPE,aAAW,iBACXJ,UAAU,gBACVK,QAASR,EAJX,kBAQA,qBAAKG,UAAU,OAAf,SAAuBE,MAThBC,SCgBJG,EA3BK,SAACZ,GAAW,IAAD,EACLa,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,KAa7B,OACE,uBAAMT,UAAU,iBAAiBU,SAPd,SAACC,GACpBA,EAAMC,iBACNJ,GAAQd,EAAMmB,WAAWL,GACzBC,EAAQ,KAIR,UACE,uBACEK,KAAK,OACLV,aAAW,uBACXW,YAAY,uBACZhB,MAAOS,EACPQ,SAjBmB,SAACL,GACxBF,EAAQE,EAAMb,OAAOC,UAkBnB,uBAAOe,KAAK,SAASf,MAAM,Y,MCOlBkB,MA1Bf,WAAgB,IAAD,EACmBV,mBAAS,IAD5B,mBACNZ,EADM,KACIuB,EADJ,KAab,OACE,sBAAKlB,UAAU,MAAf,UACE,iCACE,8CAEF,iCACE,cAAC,EAAD,CAAaa,WAhBA,SAACL,GAClBU,GAAY,SAACC,GAAD,OAAWX,GAAX,mBAAoBW,UAgB5B,cAAC,EAAD,CAASxB,SAAUA,EAAUC,cAbb,SAACM,GACrBgB,GAAY,SAACC,GACX,OAAOA,EAAKC,QAAO,SAACC,GAAD,OAAUA,IAASnB,kBCF7BoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b38e3939.chunk.js","sourcesContent":["import React from 'react';\n\nconst Thought = (props) => {\n  const { thoughts, removeThought } = props;\n\n  const handleRemoveClick = ({ target }) => {\n    removeThought(target.value);\n  };\n\n  return (\n    <ul className=\"thoughts\">\n      {thoughts.map((thought, index) => {\n        return (\n          <li key={index} className=\"Thought\">\n            <button\n              value={thought}\n              aria-label=\"Remove thought\"\n              className=\"remove-button\"\n              onClick={handleRemoveClick}\n            >\n              &times;\n            </button>\n            <div className=\"text\">{thought}</div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Thought;\n","import React, { useState } from 'react';\n\nconst ThoughtForm = (props) => {\n  const [text, setText] = useState('');\n\n  const handleTextChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    text && props.addThought(text);\n    setText('');\n  };\n\n  return (\n    <form className=\"AddThoughtForm\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        aria-label=\"What's on your mind?\"\n        placeholder=\"What's on your mind?\"\n        value={text}\n        onChange={handleTextChange}\n      />\n      <input type=\"submit\" value=\"Add\" />\n    </form>\n  );\n};\n\nexport default ThoughtForm;\n","import React, { useState } from 'react';\nimport Thought from './Thought';\nimport ThoughtForm from './ThoughtForm';\nimport './styles.css';\n\nfunction App() {\n  const [thoughts, setThoughts] = useState([]);\n\n  const addThought = (text) => {\n    setThoughts((prev) => [text, ...prev]);\n  };\n\n  const removeThought = (thought) => {\n    setThoughts((prev) => {\n      return prev.filter((item) => item !== thought);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To-do List</h1>\n      </header>\n      <main>\n        <ThoughtForm addThought={addThought} />\n        <Thought thoughts={thoughts} removeThought={removeThought} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}